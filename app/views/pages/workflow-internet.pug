extends ../layout/_layout
block title
    - var pageTitle = 'Workflow';
    - var subTitle = 'Internet';
    -
        var data = {
            'Hosting': 'hosting',
            'Web-stack': 'stack',
            'Htaccess': 'htaccess',
            'Robots': 'robots',
            'Tips': 'tips'
        };
block sidebarMenu
    h2.menu__title= subTitle
    ul.menu__list
        each url, name in data
            li.menu__item: a(href=`#${url}`)= name
block content
    section.content
        h3.content__title(id=data['Hosting']) Hosting
        h4.content__sub-title Виртуальные хостинги
        h5.content__block-title Виртуальный хостинг (Shared)
        ul
            li "Полочка в библиотеке", обслуживается хостером
            li При незначительных нагрузках все нормально, при значительных - могут отключить (если привысили средний лимит нагрузки)
            li Самые дешевые среди прочих
            li При незначительной нагрузке соседями, по можности может превосходить даже вирт выделенный сервер
            li Имеет стандартный набор служб и настроек (apache, mysql, php)
            li Влияние нагрузки, вызванной сайтами соседей
        h5.content__block-title Виртуальный выделенный сервер (VPS/VDS)
        ul
            li "Шкаф в библиотеке", обслуживается самостоятельно
            li Гарантированная часть ресурсов сервера
            li Есть возможность устанавливать ПО
            li Невысокая мощность из-за ограничения выделяемых ресурсов
            li Дороже виртуального хостинга (иногда значительно)
        h4.content__sub-title Передача файлов на хостинг
        ul
            li Через ЛК на хостинге
            li FTP/sFTP (sFTP работает поверх SSH, доступ по ключу) по умолчанию 21 порт
            li FTPS != sFTP - отдельная реализация FTP с попыткой его защитить, мало используется
            li SSH (позволяет не только передать файлы, но и управлять серверами)
        h4.content__sub-title FTP-клиенты
        ul
            li FileZilla
            li WinSCP
            li Также можно через среду разработки
        h4.content__sub-title Программы для доступа к удаленному серверу
        ul
            li Remote Desktop Manager - платформа для централизации удаленных соединений, паролей и т.д., имеет смысл использовать, когда приходится работать с большим количеством серверов
        h4.content__sub-title Домен
        ul
            li Домен привязывается к хостингу
            li Домен и хостинг не обязательно покупать у одной компании
            li Регистратор - компания, которая регистрирует домен
            li Хостер - компания, которая предоставляет услуги по размещению сайта
            li Если регистратор и хостер разные, то на стороне регистратора необходимо прописать ns сервера хостера и подождать перезагрузки DNS
    section.content
        h3.content__title(id=data['Web-stack']) Web-stack
        ul
            li LAMP - Linux, Apache, MySQL, PHP
            li WAMP - Windows, Apache, MySQL, PHP
            li MAMP - MacOS, Apache, MySQL, PHP
            li WISA - Windows, IIS, MS SQL, .NET
            li MARS - MySQL, Apache, Ruby, Solaris
    section.content
        h3.content__title(id=data['Htaccess']) Htaccess
        h4.content__sub-title File .htaccess
        ul
            li работает с веб-сервером Apache, может не работать с nginx
            li файл, который дает возможность конфигурировать работу сервера в отдельных директориях
            li устанавливать права доступа к файлам в директории
            li менять названия индексных файлов
            li самостоятельно обрабатывать ошибки Apache, перенаправляя посетителей на специальные страницы ошибок
    section.content
        h3.content__title(id=data['Robots']) Robots
        h4.content__sub-title File robots.txt
        ul
            li не является обязательным
            li используется только роботами
            li находится в корневой директории сайта
            li записываются инструкции для поисковых роботов
            li запрещать к индексации некоторые разделы или страницы сайта
            li указывать на правильное зеркалирование домена
            li рекомендовать поисковому роботу соблюдать определенный интервал между скачиванием документов с сервера
            li роботы могут этот файл игнорировать
            li можно посмотреть на любом сайте (address.ru/robots.txt)
    section.content
        h3.content__title(id=data['Tips']) tips
        h4.content__sub-title Как устроен интернет?
        h5.content__block-title Канальный
        ul
            li Физическая среда и принципы кодирования информации (передача данных по кабелю)
        h5.content__block-title Сетевой
        ul
            li IP - Internet Protocol (ранее IP4, IPv6 - новые).
            li Описывает структуру сети и доставку пакетов
            li Но не гарантирует надежной доставки пакета до адресата
        h5.content__block-title Транспортный
        ul
            li UTP-протокол - звук, иногда используется в играх, стримах, видео, аудио (не ждет доставки пакета).
            li TCP-протокол - файлы, используется браузерами (ждет, пока пакет будет доставлен).
            li Контролирует длину сообщения, скорость обмена, трафик
            li Осуществляет повторный запрос данных в случае потери и устраняет дублирование
        h5.content__block-title Прикладной
        ul
            li HTTP(S) - HyperText Transfer Protocol (Secured)
            li FTP - File Transfer Protocol
            li SMTP - Simple Mail Transfer Protocol
            li SSH - Secure Shell - для доступа на удаленные сервера на базе linux
            li DNS - Digital Network System
            li Имя - домен, хостинг - сервер.
        h4.content__sub-title Взаимодейстие клиент-сервер:
        ul
            li Сайт находится на сервере
            li Браузер понимает благодаря DNS (48 hrs) (ввод site.ru => браузер => DNS => IP)
            li Доставка? служба - TCP/IP, посылка - http-пакеты (состоят из заголовков и тела - html-код)
            li Как браузер читает? Детали - html, css, img. Инструкция - спецификация html/css
            li Много http-запросов? Для http/1.1 критично, последовательно! Для http/2.0 не критично, параллельно!
            li min файлов => min запросов (1 файл = 1 http-запрос)
        h4.content__sub-title Человекопонятный процесс:
        ul
            li Человек - сайт
            li Дом - сервер
            li Адрес - IP
            li Номер квартиры - port программы (по умолчанию http :80, https :443, но могут работать и на других портах)
            li Комната - virtual host
            li Имя - name.ru
        h4.content__sub-title Tips
        ul
            li Браузер устанавливает связь с сервером, получает ответ, парсит код, мы видим страницу
            li Порт открывается свой на клиенте, свой на сервере, по завершении работы закрывается
            li Подозрительно, когда у владельца крупного сайта нет сертификата (400р/год)
            li К одной базе данных можно подключить несколько сайтов
        h5.content__block-title Where?
        ul
            li house - server #[span.content__tips road - cable]
            li address - IP address
            li apartment - program (port)
            li room - virtual hosting #[span.content__tips inside a web-server]
            li person - html.ru
        table.content__example
            tr
                td Home address (server):
                td 178.68.180.161
            tr
                td Apartment (port):
                td 80
            tr
                td Person (website):
                td html.ru
        h5.content__block-title How?
        p html.ru > DNS > 178.68.180.161
        h5.content__block-title Delivery?